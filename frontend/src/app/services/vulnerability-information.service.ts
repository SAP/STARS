import { Injectable } from "@angular/core";

@Injectable({
    providedIn: 'root',
})
export class VulnerabilityInfoService {

    private infos = {
        "jailbreak": {
            "description": "Jailbreaking refers to techniques that trick the model into bypassing its ethical and safety constraints. This often involves using specific prompts or sequences of inputs that exploit weaknesses in the model's guardrails."
        },
        "prompt-injection": {
            "description": "Prompt injection is a technique where an attacker manipulates the input prompt to cause the model to behave in unintended ways. By carefully crafting inputs, an attacker can bypass the intended constraints or cause the model to generate harmful, misleading, or undesirable outputs."
        },
        "prompt-leakage": {
            "description": "Prompt Leakage is a vulnerability in which information provided in the input prompt is unintentionally included in the model's output. This can occur when the model inadvertently \"leaks\" details that should have been processed internally rather than shared in its response. This can lead to unintended disclosure of sensitive information, confidential data, or private user inputs."
        }
    };

    public getInfo(vulnerability: string) {
        if (vulnerability in this.infos) {
            // @ts-expect-error (We are handling the case using this check without needing another type)
            return this.infos[vulnerability].description;
        }
        return "Unknown vulnerability";
    }
}
